//NEXT COMPONENTS
import Head from "next/head";
//COMPONENTS
import Header from "../../components/header";
import Countries from "../../components/countries/countries";
import Details from "../../components/country-detail/details";
import { useState } from "react";

// Decipher if we are on localhost for development or vercel for deployment with environment variables!
// http for local, https for vercel
const isProduction = process.env.NODE_ENV === "production";
const apiUrl = isProduction
  ? process.env.NEXTJS_HOST_API_URL
  : process.env.LOCAL_HOST_API_URL;

//Collect countries data!
export const getServerSideProps = async ({ req }) => {
  // Try setinterval here so getstaticprops works?
  // Use req.header.host to dynamically display the host name
  // Both local and vercel deployment now work perfectly!!!!!
  const url = `${apiUrl}://${req.headers.host}/api/get-countries`;
  const res = await fetch(url);
  const countriesData = await res.json();

  return {
    props: {
      data: countriesData,
      revalidate: 86400000, //24 hours in milliseconds. Now works similar to getstaticprops!
    },
  };
};

export default function Home({data}) {
  const [detailDisplay, setDetailDisplay] = useState(false);
  const [countryInfo, setCountryInfo] = useState(null);
  const [countryCodes, setCountryCodes] = useState({});
  const [currentFilters, setCurrentFilters] = useState();

  const handleCountryData = (data) =>{
    setCountryInfo(data);
    setDetailDisplay(true);
  }

  const handleCountryCodes = (codes) =>{
    setCountryCodes(codes);
  }

  const handleClickBack = () =>{
    setDetailDisplay(false);
  }

  return (
    <>
      <Head>
        <title>Countries</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      { detailDisplay ? <Details data={countryInfo} codes={countryCodes} back={handleClickBack}/> : <Countries countriesData={data} countryData={handleCountryData} countryCodes={handleCountryCodes}/> }
      
    </>
  );
}
